// Auto generated by sqlw-mysql (https://github.com/huangjunwen/sqlw-mysql) default template.
// DON NOT EDIT.

package models

import (
	"fmt"
)

func groupBy(src Slicer, selector func(interface{}) TableRowWithPrimary, trs Slicer, groups Slicer) {

	if trs.nxLen() != 0 || (groups != nil && groups.nxLen() != 0) {
		panic(fmt.Errorf("Expect empty slices"))
	}

	prims := make(map[interface{}]int) // PrimaryValue -> index of trs/groups
	for i := 0; i < src.nxLen(); i++ {

		item := src.nxItem(i)
		tr := selector(item)

		// Skip rows with null value.
		if !tr.Valid() {
			continue
		}

		p := tr.PrimaryValue()
		idx, ok := prims[p]
		if !ok {
			// A new PrimaryValue found.
			trs.nxAppend(tr)
			if groups != nil {
				groups.nxAppend(nil)
			}
			idx = trs.nxLen() - 1
			prims[p] = idx
		}

		if groups != nil {
			groups.nxItem(idx).(Slicer).nxAppend(item)
		}

	}

}
